version: '3.1'
services:
  chromadb:
    # https://github.com/chroma-core/chroma/blob/main/docker-compose.yml
    image: chromadb/chroma:latest
    hostname: chromadb
    restart: unless-stopped
    # ports:
    #  - "8000:8000/tcp"
    volumes:
      - ./chromadb-data:/chroma/chroma
    environment:
      ANONYMIZED_TELEMETRY: False # disable telemetry metrics
    healthcheck:
      test: [ "CMD", "/bin/bash", "-c", "cat < /dev/null > /dev/tcp/localhost/8000" ]
      interval: 10s
      timeout: 5s
      retries: 3
  flask:
    build: ./flask/
    hostname: flask
    volumes:
      - ./static:/static:ro
    expose:
      - 5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flask.rule=Host(`192.168.1.112`)"
      - "traefik.http.routers.flask.tls=true"
      - "traefik.http.routers.flask.entrypoints=websecure"
      - "traefik.http.services.flask.loadbalancer.server.port=5000"
    depends_on:
      - chromadb
      - traefik
    command: sh -c "gunicorn -w 4 -b 0.0.0.0:5000 'flaskapp:create_app()'"

  traefik:
    build: ./traefik/
    hostname: traefik
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --providers.file.directory=/configuration/
      - --entryPoints.websecure.address=:8448
    ports:
      - "8448:8448"
    volumes:
      # so Traefik can listen to Docker events
      - /var/run/docker.sock:/var/run/docker.sock