services:
  chromadb:
    # https://github.com/chroma-core/chroma/blob/main/docker-compose.yml
    image: chromadb/chroma:latest
    hostname: chromadb
    restart: unless-stopped
    # ports:
    #  - "8000:8000/tcp"
    volumes:
      - ./chromadb-data:/data
    environment:
      ANONYMIZED_TELEMETRY: False # disable telemetry metrics
    healthcheck:
      test: [ "CMD", "/bin/bash", "-c", "cat < /dev/null > /dev/tcp/localhost/8000" ]
      interval: 10s
      timeout: 5s
      retries: 3
  flask:
    build:
      context: ./flask/
      args:
        DOCKER_BUILDKIT: 1
    hostname: flask
    volumes:
      - ./static:/static:rw
      - ./flask:/flask:ro
    environment:
      ORGANIZE_FILES: ${ORGANIZE_FILES}
      CONVERT_GIF_TO_MP4: ${CONVERT_GIF_TO_MP4}
      CONVERT_GIF_TO_WEBM: ${CONVERT_GIF_TO_WEBM}
      DELETE_GIF_AFTER_CONVERSION: ${DELETE_GIF_AFTER_CONVERSION}
      CONVERT_WEBM_TO_MP4: ${CONVERT_WEBM_TO_MP4}
      DELETE_WEBM_AFTER_CONVERSION: ${DELETE_WEBM_AFTER_CONVERSION}
      CONVERT_MP4_TO_WEBM: ${CONVERT_MP4_TO_WEBM}
      DELETE_MP4_AFTER_CONVERSION: ${DELETE_MP4_AFTER_CONVERSION}
      GENERATE_CAPTIONS: ${GENERATE_CAPTIONS}
      CAPTION_PROMPT: ${CAPTION_PROMPT}
      FLASK_DEBUG: 1
    expose:
      - 5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flask.rule=Host(`127.0.0.1`) || Host(`localhost`) || Host(`192.168.1.112`)"
      - "traefik.http.routers.flask.tls=true"
      - "traefik.http.routers.flask.entrypoints=websecure"
      - "traefik.http.services.flask.loadbalancer.server.port=5000"
      # https://doc.traefik.io/traefik/middlewares/http/basicauth/
      # Note: when used in docker-compose.yml all dollar signs in the hash need to be doubled for escaping.
      # To create user:password pair, it's possible to use this command:
      # echo $(htpasswd -nB admin) | sed -e s/\\$/\\$\\$/g
      # default: admin:admin
      - "traefik.http.routers.flask.middlewares=flaskauth"
      - "traefik.http.middlewares.flaskauth.basicauth.users=admin:$$2y$$05$$6YrH.gY/u4FOtcfw8WgBqObDjR7383ryagIweunhYkno/i8vgclD6"
    depends_on:
      - chromadb
      - traefik
      - worker
    command: ["/startup-dev.sh"]

  valkey:
    image: valkey/valkey:latest
    restart: unless-stopped
    hostname: valkey

  worker:
    build:
      context: ./flask/
      dockerfile: Dockerfile_Worker
      args:
        DOCKER_BUILDKIT: 1
    hostname: worker
    restart: unless-stopped
    environment:
      TZ: America/Chicago
    depends_on:
      - valkey
    volumes:
      - ./static:/static:rw
      - ./flask:/flask:ro

  traefik:
    build: ./traefik/
    hostname: traefik
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --providers.file.directory=/configuration/
      - --entryPoints.websecure.address=:8448
      - --entryPoints.ping.address=:80
      - --ping.entryPoint=ping
    ports:
      - "8448:8448"
      # web-UI dashboard, localhost:8080/dashboard
      - "8080:8080"
    volumes:
      # so Traefik can listen to Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: wget --quiet --tries=1 --spider http://127.0.0.1/ping || exit 1
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 10s
